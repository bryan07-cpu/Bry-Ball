{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\my-sports-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PredictionForm from '../components/PredictionForm'; // Adjust the path if necessary\n\n// Function to fetch NBA games\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [nbaGames, setNbaGames] = useState([]);\n  const [tennisGames, setTennisGames] = useState([]);\n  const [volleyballGames, setVolleyballGames] = useState([]);\n  useEffect(() => {\n    // Simulate login check\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    } else {\n      window.location.href = '/';\n    }\n\n    // Mock data for upcoming games\n    const mockNba = [{\n      homeTeam: 'Lakers',\n      awayTeam: 'Warriors',\n      date: '2025-04-22'\n    }, {\n      homeTeam: 'Bulls',\n      awayTeam: 'Celtics',\n      date: '2025-04-23'\n    }];\n    const mockTennis = [{\n      playerA: 'Nadal',\n      playerB: 'Federer',\n      date: '2025-04-24'\n    }, {\n      playerA: 'Djokovic',\n      playerB: 'Alcaraz',\n      date: '2025-04-25'\n    }];\n    const mockVolleyball = [{\n      teamA: 'USA',\n      teamB: 'Brazil',\n      date: '2025-04-26'\n    }, {\n      teamA: 'Italy',\n      teamB: 'France',\n      date: '2025-04-27'\n    }];\n    setNbaGames(mockNba);\n    setTennisGames(mockTennis);\n    setVolleyballGames(mockVolleyball);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Let\\u2019s start predicting games!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NBA Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), nbaGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.homeTeam, \" vs \", game.awayTeam, \" on \", game.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tennis Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), tennisGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.playerA, \" vs \", game.playerB, \" on \", game.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Volleyball Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), volleyballGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.teamA, \" vs \", game.teamB, \" on \", game.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(PredictionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"YM9SzzlCqc1z0140xA03vxQ17z4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PredictionForm","jsxDEV","_jsxDEV","Home","_s","username","setUsername","nbaGames","setNbaGames","tennisGames","setTennisGames","volleyballGames","setVolleyballGames","storedUsername","localStorage","getItem","window","location","href","mockNba","homeTeam","awayTeam","date","mockTennis","playerA","playerB","mockVolleyball","teamA","teamB","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","index","_c","$RefreshReg$"],"sources":["C:/Users/Bryan/my-sports-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PredictionForm from '../components/PredictionForm';  // Adjust the path if necessary\r\n\r\n// Function to fetch NBA games\r\n\r\nfunction Home() {\r\n  const [username, setUsername] = useState('');\r\n  const [nbaGames, setNbaGames] = useState([]);\r\n  const [tennisGames, setTennisGames] = useState([]);\r\n  const [volleyballGames, setVolleyballGames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulate login check\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n\r\n    // Mock data for upcoming games\r\n    const mockNba = [\r\n      { homeTeam: 'Lakers', awayTeam: 'Warriors', date: '2025-04-22' },\r\n      { homeTeam: 'Bulls', awayTeam: 'Celtics', date: '2025-04-23' },\r\n    ];\r\n    const mockTennis = [\r\n      { playerA: 'Nadal', playerB: 'Federer', date: '2025-04-24' },\r\n      { playerA: 'Djokovic', playerB: 'Alcaraz', date: '2025-04-25' },\r\n    ];\r\n    const mockVolleyball = [\r\n      { teamA: 'USA', teamB: 'Brazil', date: '2025-04-26' },\r\n      { teamA: 'Italy', teamB: 'France', date: '2025-04-27' },\r\n    ];\r\n\r\n    setNbaGames(mockNba);\r\n    setTennisGames(mockTennis);\r\n    setVolleyballGames(mockVolleyball);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username}!</h1>\r\n      <p>Letâ€™s start predicting games!</p>\r\n\r\n      <h2>NBA Games</h2>\r\n      {nbaGames.map((game, index) => (\r\n        <div key={index}>\r\n          <p>{game.homeTeam} vs {game.awayTeam} on {game.date}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <h2>Tennis Games</h2>\r\n      {tennisGames.map((game, index) => (\r\n        <div key={index}>\r\n          <p>{game.playerA} vs {game.playerB} on {game.date}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <h2>Volleyball Games</h2>\r\n      {volleyballGames.map((game, index) => (\r\n        <div key={index}>\r\n          <p>{game.teamA} vs {game.teamB} on {game.date}</p>\r\n        </div>\r\n      ))}\r\n\r\n      <PredictionForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}