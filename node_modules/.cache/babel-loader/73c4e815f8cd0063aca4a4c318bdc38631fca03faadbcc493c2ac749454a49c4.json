{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\my-sports-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PredictionForm from '../components/PredictionForm'; // Adjust the path if necessary\n\n// Function to fetch NBA games\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchNBA = async () => {\n  const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/statistics?game=8133'); // Replace with your actual NBA API URL\n  const data = await response.json();\n  return data;\n};\n\n// Function to fetch Tennis games\nconst fetchTennis = async () => {\n  try {\n    const response = await fetch('https://api-tennis.p.rapidapi.com/matches', {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Key': 'YOUR_API_KEY',\n        'X-RapidAPI-Host': 'api-tennis.p.rapidapi.com'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.response || [];\n  } catch (error) {\n    console.error('Fetch Tennis Error:', error);\n    return [];\n  }\n};\n\n// Function to fetch Volleyball games\nconst fetchVolleyball = async () => {\n  const response = await fetch('https://api-volleyball.p.rapidapi.com/games/h2h?h2h=7-8'); // Replace with your Volleyball API URL\n  const data = await response.json();\n  return data;\n};\nfunction Home() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [nbaGames, setNbaGames] = useState([]);\n  const [tennisGames, setTennisGames] = useState([]);\n  const [volleyballGames, setVolleyballGames] = useState([]);\n\n  // Fetch username from localStorage or redirect to login if not logged in\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    } else {\n      window.location.href = '/';\n    }\n  }, []);\n\n  // Fetch games when the component mounts\n  useEffect(() => {\n    const fetchGames = async () => {\n      const nbaData = await fetchNBA();\n      const tennisData = await fetchTennis();\n      const volleyballData = await fetchVolleyball();\n      setNbaGames(nbaData);\n      setTennisGames(tennisData);\n      setVolleyballGames(volleyballData);\n    };\n    fetchGames();\n  }, []); // Empty array to run only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Let\\u2019s start predicting games!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming NBA Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), nbaGames.length > 0 ? nbaGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.homeTeam, \" vs \", game.awayTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading NBA games...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Tennis Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), tennisGames.length > 0 ? tennisGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.playerA, \" vs \", game.playerB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Tennis games...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Volleyball Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), volleyballGames.length > 0 ? volleyballGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [game.teamA, \" vs \", game.teamB]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Volleyball games...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PredictionForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"B6vlFtFwTjK/bd0+vvoFpvgXPzw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PredictionForm","jsxDEV","_jsxDEV","fetchNBA","response","fetch","data","json","fetchTennis","method","headers","ok","Error","error","console","fetchVolleyball","Home","_s","username","setUsername","nbaGames","setNbaGames","tennisGames","setTennisGames","volleyballGames","setVolleyballGames","storedUsername","localStorage","getItem","window","location","href","fetchGames","nbaData","tennisData","volleyballData","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","game","index","homeTeam","awayTeam","date","playerA","playerB","teamA","teamB","_c","$RefreshReg$"],"sources":["C:/Users/Bryan/my-sports-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PredictionForm from '../components/PredictionForm';  // Adjust the path if necessary\r\n\r\n// Function to fetch NBA games\r\nconst fetchNBA = async () => {\r\n  const response = await fetch('https://api-nba-v1.p.rapidapi.com/players/statistics?game=8133');  // Replace with your actual NBA API URL\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\n// Function to fetch Tennis games\r\nconst fetchTennis = async () => {\r\n  try {\r\n    const response = await fetch('https://api-tennis.p.rapidapi.com/matches', {\r\n      method: 'GET',\r\n      headers: {\r\n        'X-RapidAPI-Key': 'YOUR_API_KEY',\r\n        'X-RapidAPI-Host': 'api-tennis.p.rapidapi.com'\r\n      }\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.response || [];\r\n  } catch (error) {\r\n    console.error('Fetch Tennis Error:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n// Function to fetch Volleyball games\r\nconst fetchVolleyball = async () => {\r\n  const response = await fetch('https://api-volleyball.p.rapidapi.com/games/h2h?h2h=7-8');  // Replace with your Volleyball API URL\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nfunction Home() {\r\n  const [username, setUsername] = useState('');\r\n  const [nbaGames, setNbaGames] = useState([]);\r\n  const [tennisGames, setTennisGames] = useState([]);\r\n  const [volleyballGames, setVolleyballGames] = useState([]);\r\n\r\n  // Fetch username from localStorage or redirect to login if not logged in\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    } else {\r\n      window.location.href = '/';\r\n    }\r\n  }, []);\r\n\r\n  // Fetch games when the component mounts\r\n  useEffect(() => {\r\n    const fetchGames = async () => {\r\n      const nbaData = await fetchNBA();\r\n      const tennisData = await fetchTennis();\r\n      const volleyballData = await fetchVolleyball();\r\n\r\n      setNbaGames(nbaData);\r\n      setTennisGames(tennisData);\r\n      setVolleyballGames(volleyballData);\r\n    };\r\n\r\n    fetchGames();\r\n  }, []);  // Empty array to run only once when the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username}!</h1>\r\n      <p>Letâ€™s start predicting games!</p>\r\n\r\n      <h2>Upcoming NBA Games</h2>\r\n      {nbaGames.length > 0 ? (\r\n        nbaGames.map((game, index) => (\r\n          <div key={index}>\r\n            <p>{game.homeTeam} vs {game.awayTeam}</p>\r\n            <p>{game.date}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading NBA games...</p>\r\n      )}\r\n\r\n      <h2>Upcoming Tennis Games</h2>\r\n      {tennisGames.length > 0 ? (\r\n        tennisGames.map((game, index) => (\r\n          <div key={index}>\r\n            <p>{game.playerA} vs {game.playerB}</p>\r\n            <p>{game.date}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading Tennis games...</p>\r\n      )}\r\n\r\n      <h2>Upcoming Volleyball Games</h2>\r\n      {volleyballGames.length > 0 ? (\r\n        volleyballGames.map((game, index) => (\r\n          <div key={index}>\r\n            <p>{game.teamA} vs {game.teamB}</p>\r\n            <p>{game.date}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading Volleyball games...</p>\r\n      )}\r\n\r\n      <PredictionForm />  {/* Add the PredictionForm component here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}