{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\my-sports-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useEffect, useState } from 'react';\nimport PredictionForm from '../components/PredictionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [userId, setUserId] = useState('bryantruong07'); // replace with real MongoDB userId\n\n  useEffect(() => {\n    // Mock test games\n    const mockGames = [{\n      id: 'nba1',\n      sport: 'NBA',\n      teams: ['Lakers', 'Heat']\n    }, {\n      id: 'tennis1',\n      sport: 'Tennis',\n      players: ['Nadal', 'Djokovic']\n    }, {\n      id: 'volleyball1',\n      sport: 'Volleyball',\n      teams: ['Brazil', 'USA']\n    }];\n    setGames(mockGames);\n  }, []);\n  const handlePredictionSubmit = async (gameId, prediction) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/predictions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          gameId,\n          prediction\n        })\n      });\n      const data = await response.json();\n      console.log('Prediction saved:', data);\n      alert('Prediction submitted!');\n    } catch (error) {\n      console.error('Failed to submit prediction', error);\n      alert('Failed to submit prediction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Make Your Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), games.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 border rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: game.sport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PredictionForm, {\n        game: game,\n        onSubmit: handlePredictionSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, game.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"4d70VEt4LO24EBq9rLOB5UqwP54=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PredictionForm","jsxDEV","_jsxDEV","Home","_s","games","setGames","userId","setUserId","mockGames","id","sport","teams","players","handlePredictionSubmit","gameId","prediction","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","alert","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","game","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Bryan/my-sports-app/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport PredictionForm from '../components/PredictionForm';\r\n\r\nfunction Home() {\r\n  const [games, setGames] = useState([]);\r\n  const [userId, setUserId] = useState('bryantruong07'); // replace with real MongoDB userId\r\n\r\n  useEffect(() => {\r\n    // Mock test games\r\n    const mockGames = [\r\n      { id: 'nba1', sport: 'NBA', teams: ['Lakers', 'Heat'] },\r\n      { id: 'tennis1', sport: 'Tennis', players: ['Nadal', 'Djokovic'] },\r\n      { id: 'volleyball1', sport: 'Volleyball', teams: ['Brazil', 'USA'] },\r\n    ];\r\n    setGames(mockGames);\r\n  }, []);\r\n\r\n  const handlePredictionSubmit = async (gameId, prediction) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/predictions', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ userId, gameId, prediction }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Prediction saved:', data);\r\n      alert('Prediction submitted!');\r\n    } catch (error) {\r\n      console.error('Failed to submit prediction', error);\r\n      alert('Failed to submit prediction');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Make Your Predictions</h1>\r\n      {games.map(game => (\r\n        <div key={game.id} className=\"mb-6 p-4 border rounded shadow\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">{game.sport}</h2>\r\n          <PredictionForm game={game} onSubmit={handlePredictionSubmit} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;;EAEvDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,SAAS,GAAG,CAChB;MAAEC,EAAE,EAAE,MAAM;MAAEC,KAAK,EAAE,KAAK;MAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM;IAAE,CAAC,EACvD;MAAEF,EAAE,EAAE,SAAS;MAAEC,KAAK,EAAE,QAAQ;MAAEE,OAAO,EAAE,CAAC,OAAO,EAAE,UAAU;IAAE,CAAC,EAClE;MAAEH,EAAE,EAAE,aAAa;MAAEC,KAAK,EAAE,YAAY;MAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,KAAK;IAAE,CAAC,CACrE;IACDN,QAAQ,CAACG,SAAS,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,sBAAsB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,UAAU,KAAK;IAC3D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,MAAM;UAAEQ,MAAM;UAAEC;QAAW,CAAC;MACrD,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MACtCI,KAAK,CAAC,uBAAuB,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDD,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACE1B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAI6B,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjE9B,KAAK,CAAC+B,GAAG,CAACC,IAAI,iBACbnC,OAAA;MAAmB6B,SAAS,EAAC,gCAAgC;MAAAD,QAAA,gBAC3D5B,OAAA;QAAI6B,SAAS,EAAC,4BAA4B;QAAAD,QAAA,EAAEO,IAAI,CAAC1B;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DjC,OAAA,CAACF,cAAc;QAACqC,IAAI,EAAEA,IAAK;QAACC,QAAQ,EAAExB;MAAuB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAFxDE,IAAI,CAAC3B,EAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC/B,EAAA,CA1CQD,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA4Cb,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}