{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bryan\\\\my-sports-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useEffect, useState } from 'react';\nimport PredictionForm from '../components/PredictionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  user\n}) {\n  _s();\n  const [games, setGames] = useState([]);\n\n  // Mock upcoming games\n  useEffect(() => {\n    const mockGames = [{\n      id: 'game1',\n      teamA: 'Lakers',\n      teamB: 'Warriors'\n    }, {\n      id: 'game2',\n      teamA: 'Heat',\n      teamB: 'Celtics'\n    }, {\n      id: 'game3',\n      teamA: 'Nets',\n      teamB: 'Bucks'\n    }];\n    setGames(mockGames);\n  }, []);\n  const handleSubmitPrediction = async (gameId, prediction) => {\n    try {\n      const res = await fetch('http://localhost:5000/api/predictions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: user._id,\n          gameId,\n          prediction\n        })\n      });\n      const data = await res.json();\n      console.log('Prediction saved:', data);\n    } catch (err) {\n      console.error('Error submitting prediction:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: [\"Welcome, \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"Upcoming Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: games.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2\",\n          children: [game.teamA, \" vs \", game.teamB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PredictionForm, {\n          game: game,\n          onSubmit: handleSubmitPrediction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, game.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Qv+Imzbbm47aMqW5lWWxooDvX6M=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PredictionForm","jsxDEV","_jsxDEV","Home","user","_s","games","setGames","mockGames","id","teamA","teamB","handleSubmitPrediction","gameId","prediction","res","fetch","method","headers","body","JSON","stringify","userId","_id","data","json","console","log","err","error","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","game","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Bryan/my-sports-app/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport PredictionForm from '../components/PredictionForm';\r\n\r\nfunction Home({ user }) {\r\n  const [games, setGames] = useState([]);\r\n\r\n  // Mock upcoming games\r\n  useEffect(() => {\r\n    const mockGames = [\r\n      { id: 'game1', teamA: 'Lakers', teamB: 'Warriors' },\r\n      { id: 'game2', teamA: 'Heat', teamB: 'Celtics' },\r\n      { id: 'game3', teamA: 'Nets', teamB: 'Bucks' },\r\n    ];\r\n    setGames(mockGames);\r\n  }, []);\r\n\r\n  const handleSubmitPrediction = async (gameId, prediction) => {\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/predictions', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          userId: user._id,\r\n          gameId,\r\n          prediction,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log('Prediction saved:', data);\r\n    } catch (err) {\r\n      console.error('Error submitting prediction:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Welcome, {user.name}!</h1>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Upcoming Games</h2>\r\n      <div className=\"space-y-4\">\r\n        {games.map((game) => (\r\n          <div key={game.id} className=\"p-4 border rounded shadow\">\r\n            <p className=\"mb-2\">\r\n              {game.teamA} vs {game.teamB}\r\n            </p>\r\n            <PredictionForm game={game} onSubmit={handleSubmitPrediction} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}